/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gains, GainsInterface } from "../Gains";

const _abi = [
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "authorizeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "revokeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f4761696e730000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4741494e53000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b611ffc80620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063a457c2d711610071578063a457c2d7146102f6578063a9059cbb14610326578063dd62ed3e14610356578063f19e207e14610386578063f2fde38b146103b657610121565b806370a0823114610264578063715018a6146102945780638da5cb5b1461029e57806395d89b41146102bc5780639dc29fac146102da57610121565b8063313ce567116100f4578063313ce567146101c2578063317a7aec146101e057806339509351146101fc57806340c10f191461022c5780634a5db3b51461024857610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103d2565b60405161013b91906115ca565b60405180910390f35b61015e60048036038101906101599190611685565b610464565b60405161016b91906116e0565b60405180910390f35b61017c610487565b604051610189919061170a565b60405180910390f35b6101ac60048036038101906101a79190611725565b610491565b6040516101b991906116e0565b60405180910390f35b6101ca6104c0565b6040516101d79190611794565b60405180910390f35b6101fa60048036038101906101f591906117af565b6104c9565b005b61021660048036038101906102119190611685565b6105a0565b60405161022391906116e0565b60405180910390f35b61024660048036038101906102419190611685565b61064a565b005b610262600480360381019061025d91906117af565b610660565b005b61027e600480360381019061027991906117af565b610737565b60405161028b919061170a565b60405180910390f35b61029c61077f565b005b6102a6610807565b6040516102b391906117eb565b60405180910390f35b6102c4610831565b6040516102d191906115ca565b60405180910390f35b6102f460048036038101906102ef9190611685565b6108c3565b005b610310600480360381019061030b9190611685565b6108d1565b60405161031d91906116e0565b60405180910390f35b610340600480360381019061033b9190611685565b6109bb565b60405161034d91906116e0565b60405180910390f35b610370600480360381019061036b9190611806565b6109de565b60405161037d919061170a565b60405180910390f35b6103a0600480360381019061039b91906117af565b610a65565b6040516103ad91906116e0565b60405180910390f35b6103d060048036038101906103cb91906117af565b610a85565b005b6060600380546103e190611875565b80601f016020809104026020016040519081016040528092919081815260200182805461040d90611875565b801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b5050505050905090565b60008061046f610b7d565b905061047c818585610b85565b600191505092915050565b6000600254905090565b60008061049c610b7d565b90506104a9858285610d50565b6104b4858585610ddc565b60019150509392505050565b60006012905090565b6104d1610b7d565b73ffffffffffffffffffffffffffffffffffffffff166104ef610807565b73ffffffffffffffffffffffffffffffffffffffff1614610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c906118f3565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806105ab610b7d565b905061063f818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063a9190611942565b610b85565b600191505092915050565b61065261105d565b61065c828261112a565b5050565b610668610b7d565b73ffffffffffffffffffffffffffffffffffffffff16610686610807565b73ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d3906118f3565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610787610b7d565b73ffffffffffffffffffffffffffffffffffffffff166107a5610807565b73ffffffffffffffffffffffffffffffffffffffff16146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906118f3565b60405180910390fd5b610805600061128a565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461084090611875565b80601f016020809104026020016040519081016040528092919081815260200182805461086c90611875565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050905090565b6108cd8282611350565b5050565b6000806108dc610b7d565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156109a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099990611a0a565b60405180910390fd5b6109af8286868403610b85565b60019250505092915050565b6000806109c6610b7d565b90506109d3818585610ddc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60066020528060005260406000206000915054906101000a900460ff1681565b610a8d610b7d565b73ffffffffffffffffffffffffffffffffffffffff16610aab610807565b73ffffffffffffffffffffffffffffffffffffffff1614610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af8906118f3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6890611a9c565b60405180910390fd5b610b7a8161128a565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611b2e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c90611bc0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610d43919061170a565b60405180910390a3505050565b6000610d5c84846109de565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dd65781811015610dc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbf90611c2c565b60405180910390fd5b610dd58484848403610b85565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390611cbe565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ebc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb390611d50565b60405180910390fd5b610ec7838383611527565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490611de2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fe09190611942565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611044919061170a565b60405180910390a361105784848461152c565b50505050565b611065610807565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156110f1575060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514155b15611128576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561119a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119190611e4e565b60405180910390fd5b6111a660008383611527565b80600260008282546111b89190611942565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461120d9190611942565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611272919061170a565b60405180910390a36112866000838361152c565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b790611ee0565b60405180910390fd5b6113cc82600083611527565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990611f72565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546114a99190611f92565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161150e919061170a565b60405180910390a36115228360008461152c565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156b578082015181840152602081019050611550565b8381111561157a576000848401525b50505050565b6000601f19601f8301169050919050565b600061159c82611531565b6115a6818561153c565b93506115b681856020860161154d565b6115bf81611580565b840191505092915050565b600060208201905081810360008301526115e48184611591565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061161c826115f1565b9050919050565b61162c81611611565b811461163757600080fd5b50565b60008135905061164981611623565b92915050565b6000819050919050565b6116628161164f565b811461166d57600080fd5b50565b60008135905061167f81611659565b92915050565b6000806040838503121561169c5761169b6115ec565b5b60006116aa8582860161163a565b92505060206116bb85828601611670565b9150509250929050565b60008115159050919050565b6116da816116c5565b82525050565b60006020820190506116f560008301846116d1565b92915050565b6117048161164f565b82525050565b600060208201905061171f60008301846116fb565b92915050565b60008060006060848603121561173e5761173d6115ec565b5b600061174c8682870161163a565b935050602061175d8682870161163a565b925050604061176e86828701611670565b9150509250925092565b600060ff82169050919050565b61178e81611778565b82525050565b60006020820190506117a96000830184611785565b92915050565b6000602082840312156117c5576117c46115ec565b5b60006117d38482850161163a565b91505092915050565b6117e581611611565b82525050565b600060208201905061180060008301846117dc565b92915050565b6000806040838503121561181d5761181c6115ec565b5b600061182b8582860161163a565b925050602061183c8582860161163a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061188d57607f821691505b602082108114156118a1576118a0611846565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118dd60208361153c565b91506118e8826118a7565b602082019050919050565b6000602082019050818103600083015261190c816118d0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061194d8261164f565b91506119588361164f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561198d5761198c611913565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119f460258361153c565b91506119ff82611998565b604082019050919050565b60006020820190508181036000830152611a23816119e7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a8660268361153c565b9150611a9182611a2a565b604082019050919050565b60006020820190508181036000830152611ab581611a79565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b1860248361153c565b9150611b2382611abc565b604082019050919050565b60006020820190508181036000830152611b4781611b0b565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611baa60228361153c565b9150611bb582611b4e565b604082019050919050565b60006020820190508181036000830152611bd981611b9d565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611c16601d8361153c565b9150611c2182611be0565b602082019050919050565b60006020820190508181036000830152611c4581611c09565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611ca860258361153c565b9150611cb382611c4c565b604082019050919050565b60006020820190508181036000830152611cd781611c9b565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611d3a60238361153c565b9150611d4582611cde565b604082019050919050565b60006020820190508181036000830152611d6981611d2d565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611dcc60268361153c565b9150611dd782611d70565b604082019050919050565b60006020820190508181036000830152611dfb81611dbf565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611e38601f8361153c565b9150611e4382611e02565b602082019050919050565b60006020820190508181036000830152611e6781611e2b565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611eca60218361153c565b9150611ed582611e6e565b604082019050919050565b60006020820190508181036000830152611ef981611ebd565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f5c60228361153c565b9150611f6782611f00565b604082019050919050565b60006020820190508181036000830152611f8b81611f4f565b9050919050565b6000611f9d8261164f565b9150611fa88361164f565b925082821015611fbb57611fba611913565b5b82820390509291505056fea2646970667358221220877fc9a834024df44e4fc63f51951dead1c45f15cf24b122de0200ea64e506bc64736f6c634300080a0033";

type GainsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GainsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gains__factory extends ContractFactory {
  constructor(...args: GainsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gains";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gains> {
    return super.deploy(overrides || {}) as Promise<Gains>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gains {
    return super.attach(address) as Gains;
  }
  connect(signer: Signer): Gains__factory {
    return super.connect(signer) as Gains__factory;
  }
  static readonly contractName: "Gains";
  public readonly contractName: "Gains";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GainsInterface {
    return new utils.Interface(_abi) as GainsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gains {
    return new Contract(address, _abi, signerOrProvider) as Gains;
  }
}
